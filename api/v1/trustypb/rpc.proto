syntax = "proto3";
package trustypb;

option go_package = "github.com/ekspand/trusty/api/v1/trustypb";

import "google/protobuf/timestamp.proto";
// for grpc-gateway
import "google/api/annotations.proto";

service StatusService {
    // Version returns the server version.
    rpc Version(EmptyRequest) returns (ServerVersion) {
        option (google.api.http) = {
            get: "/v1gw/status/version"
        };
    }

    // Server returns the server status.
    rpc Server(EmptyRequest) returns (ServerStatusResponse) {
        option (google.api.http) = {
            get: "/v1gw/status/server"
      };
    }

    // Caller returns the caller status.
    rpc Caller(EmptyRequest) returns (CallerStatusResponse) {
        option (google.api.http) = {
            get: "/v1gw/status/caller"
      };
    }
}

message EmptyRequest {
}

message ServerVersion {
    // Build is the server build version.
    string build = 1;
    // Runtime is the runtime version.
    string runtime = 2;
}

message ServerStatus {
    // Name of the server or application.
    string name = 1;
    // Nodename is the human-readable name of the cluster member,
    // or empty for single host.
    string nodename = 2;
    // Hostname is operating system's host name.
    string hostname = 3;
    // ListenURLs is the list of URLs the service is listening on.
    repeated string listen_urls = 4;
    // StartedAt is the time when the server has started.
    google.protobuf.Timestamp started_at = 5;
}

message ServerStatusResponse {
    // Status of the server.
    ServerStatus status = 1;

    // Version of the server.
    ServerVersion version = 2;
}

message CallerStatusResponse {
    // Id of the caller.
    string id = 1;
    // Name of the caller.
    string name = 2;
    // Role of the caller.
    string role = 3;
}

// Error is the generic error returned from unary RPCs.
message Error {
    string error = 1;
    int32 code = 2;
    string message = 3;
}

{
  "swagger": "2.0",
  "info": {
    "title": "cis.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CIS"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/cis/certs/{ID}": {
      "get": {
        "summary": "GetCertificate returns the certificate",
        "operationId": "CIS_GetCertificate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCertificateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "description": "ID specifies certificate ID.\nIf it's not set, then SKID must be provided",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "SKID",
            "description": "SKID specifies Subject Key ID to search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "IssuerSerial.IKID",
            "description": "IKID provides Issuer Key Identifier",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "IssuerSerial.SerialNumber",
            "description": "SerialNumber provides certificate's serial number",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CIS"
        ]
      }
    },
    "/v1/cis/roots": {
      "get": {
        "summary": "Roots returns the root CAs",
        "operationId": "CIS_GetRoots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRootsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "CIS"
        ]
      }
    }
  },
  "definitions": {
    "pbCertificate": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "uint64",
          "title": "Id of the certificate"
        },
        "OrgID": {
          "type": "string",
          "format": "uint64",
          "title": "OrgID of the certificate, only used with Org scope"
        },
        "SKID": {
          "type": "string",
          "title": "SKID provides Subject Key Identifier"
        },
        "IKID": {
          "type": "string",
          "title": "IKID provides Issuer Key Identifier"
        },
        "SerialNumber": {
          "type": "string",
          "title": "SerialNumber provides Serial Number"
        },
        "NotBefore": {
          "type": "string",
          "title": "NotBefore is the time when the validity period starts"
        },
        "NotAfter": {
          "type": "string",
          "title": "NotAfter is the time when the validity period starts"
        },
        "Subject": {
          "type": "string",
          "title": "Subject name"
        },
        "Issuer": {
          "type": "string",
          "title": "Issuer name"
        },
        "Sha256": {
          "type": "string",
          "title": "SHA256 thnumbprint of the cert"
        },
        "Profile": {
          "type": "string",
          "title": "Profile of the certificate"
        },
        "Pem": {
          "type": "string",
          "title": "Pem encoded certificate"
        },
        "IssuersPem": {
          "type": "string",
          "title": "IssuersPem provides PEM encoded issuers"
        },
        "Locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Locations of published certificate"
        },
        "Label": {
          "type": "string",
          "title": "Label of the certificate provided by the client"
        },
        "Metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Metadata of the certificate provided by the client"
        }
      },
      "title": "Certificate provides X509 Certificate information"
    },
    "pbCertificateResponse": {
      "type": "object",
      "properties": {
        "Certificate": {
          "$ref": "#/definitions/pbCertificate"
        }
      },
      "title": "CertificateResponse returns Certificate"
    },
    "pbIssuerSerial": {
      "type": "object",
      "properties": {
        "IKID": {
          "type": "string",
          "title": "IKID provides Issuer Key Identifier"
        },
        "SerialNumber": {
          "type": "string",
          "title": "SerialNumber provides certificate's serial number"
        }
      }
    },
    "pbRootCertificate": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "uint64",
          "title": "Id of the certificate"
        },
        "SKID": {
          "type": "string",
          "title": "SKID provides Subject Key Identifier"
        },
        "NotBefore": {
          "type": "string",
          "title": "NotBefore is the time when the validity period starts"
        },
        "NotAfter": {
          "type": "string",
          "title": "NotAfter is the time when the validity period ends"
        },
        "Subject": {
          "type": "string",
          "title": "Subject name"
        },
        "Sha256": {
          "type": "string",
          "title": "SHA256 thnumbprint of the cert"
        },
        "Trust": {
          "$ref": "#/definitions/pbTrust",
          "title": "Trust scope"
        },
        "Pem": {
          "type": "string",
          "title": "PEM encoded certificate"
        }
      },
      "title": "Root provides X509 Root Cert information"
    },
    "pbRootsResponse": {
      "type": "object",
      "properties": {
        "Roots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbRootCertificate"
          }
        }
      },
      "title": "RootsResponse returns Root Certificates"
    },
    "pbTrust": {
      "type": "string",
      "enum": [
        "Any",
        "Public",
        "Private"
      ],
      "default": "Any",
      "title": "- Any: default"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

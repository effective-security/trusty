{
  "swagger": "2.0",
  "info": {
    "title": "ca.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "CA"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "pbCAConstraint": {
      "type": "object",
      "properties": {
        "IsCA": {
          "type": "boolean"
        },
        "MaxPathLen": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "CAConstraint specifies various CA constraints on the signed certificate.\nCAConstraint would verify against (and override) the CA\nextensions in the given CSR."
    },
    "pbCSRAllowedFields": {
      "type": "object",
      "properties": {
        "Subject": {
          "type": "boolean"
        },
        "Dns": {
          "type": "boolean"
        },
        "Ip": {
          "type": "boolean"
        },
        "Email": {
          "type": "boolean"
        },
        "Uri": {
          "type": "boolean"
        }
      }
    },
    "pbCertProfile": {
      "type": "object",
      "properties": {
        "Label": {
          "type": "string"
        },
        "IssuerLabel": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Usages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Usage provides a list key usages"
        },
        "CAConstraint": {
          "$ref": "#/definitions/pbCAConstraint"
        },
        "OcspNoCheck": {
          "type": "boolean"
        },
        "Expiry": {
          "type": "string"
        },
        "Backdate": {
          "type": "string"
        },
        "AllowedExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AllowedNames": {
          "type": "string",
          "title": "AllowedNames specifies a RegExp to check for allowed names.\nIf not provided, then all values are allowed"
        },
        "AllowedDns": {
          "type": "string",
          "title": "AllowedDns specifies a RegExp to check for allowed DNS.\nIf not provided, then all values are allowed"
        },
        "AllowedEmail": {
          "type": "string",
          "title": "AllowedEmail specifies a RegExp to check for allowed email.\nIf not provided, then all values are allowed"
        },
        "AllowedUri": {
          "type": "string",
          "title": "AllowedUri specifies a RegExp to check for allowed URI.\nIf not provided, then all values are allowed"
        },
        "AllowedFields": {
          "$ref": "#/definitions/pbCSRAllowedFields",
          "description": "AllowedFields provides booleans for fields in the CSR.\nIf a AllowedFields is not present in a CertProfile,\nall of these fields may be copied from the CSR into the signed certificate.\nIf a AllowedFields *is* present in a CertProfile,\nonly those fields with a `true` value in the AllowedFields may\nbe copied from the CSR to the signed certificate.\nNote that some of these fields, like Subject, can be provided or\npartially provided through the API.\nSince API clients are expected to be trusted, but CSRs are not, fields\nprovided through the API are not subject to validation through this\nmechanism."
        },
        "Policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbCertificatePolicy"
          }
        },
        "PoliciesCritical": {
          "type": "boolean",
          "title": "PoliciesCritical specifies to mark Policies as Critical extension"
        },
        "AllowedRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DeniedRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "CertProfile provides certificate profile"
    },
    "pbCertificate": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "uint64",
          "title": "Id of the certificate"
        },
        "OrgID": {
          "type": "string",
          "format": "uint64",
          "title": "OrgID of the certificate, only used with Org scope"
        },
        "SKID": {
          "type": "string",
          "title": "SKID provides Subject Key Identifier"
        },
        "IKID": {
          "type": "string",
          "title": "IKID provides Issuer Key Identifier"
        },
        "SerialNumber": {
          "type": "string",
          "title": "SerialNumber provides Serial Number"
        },
        "NotBefore": {
          "type": "string",
          "title": "NotBefore is the time when the validity period starts"
        },
        "NotAfter": {
          "type": "string",
          "title": "NotAfter is the time when the validity period starts"
        },
        "Subject": {
          "type": "string",
          "title": "Subject name"
        },
        "Issuer": {
          "type": "string",
          "title": "Issuer name"
        },
        "Sha256": {
          "type": "string",
          "title": "SHA256 thnumbprint of the cert"
        },
        "Profile": {
          "type": "string",
          "title": "Profile of the certificate"
        },
        "Pem": {
          "type": "string",
          "title": "Pem encoded certificate"
        },
        "IssuersPem": {
          "type": "string",
          "title": "IssuersPem provides PEM encoded issuers"
        },
        "Locations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Locations of published certificate"
        },
        "Label": {
          "type": "string",
          "title": "Label of the certificate provided by the client"
        },
        "Metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Metadata of the certificate provided by the client"
        }
      },
      "title": "Certificate provides X509 Certificate information"
    },
    "pbCertificatePolicy": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "Id is OID of Certificate Policy"
        },
        "Qualifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbCertificatePolicyQualifier"
          }
        }
      }
    },
    "pbCertificatePolicyQualifier": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "pbCertificateResponse": {
      "type": "object",
      "properties": {
        "Certificate": {
          "$ref": "#/definitions/pbCertificate"
        }
      },
      "title": "CertificateResponse returns Certificate"
    },
    "pbCertificatesResponse": {
      "type": "object",
      "properties": {
        "Certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbCertificate"
          }
        }
      },
      "title": "CertificatesResponse returns Certificates list"
    },
    "pbCrl": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "uint64",
          "title": "Id of the CRL"
        },
        "IKID": {
          "type": "string",
          "title": "IKID provides Issuer Key Identifier"
        },
        "ThisUpdate": {
          "type": "string",
          "title": "ThisUpdate is the time when the CRL was issued"
        },
        "NextUpdate": {
          "type": "string",
          "title": "NextUpdate is the time for the next update"
        },
        "Issuer": {
          "type": "string",
          "title": "Issuer name"
        },
        "Pem": {
          "type": "string",
          "title": "PEM encoded CRL"
        }
      },
      "title": "Crl provides X509 CRL information"
    },
    "pbCrlResponse": {
      "type": "object",
      "properties": {
        "Crl": {
          "$ref": "#/definitions/pbCrl"
        }
      },
      "title": "CrlResponse returns CRL"
    },
    "pbCrlsResponse": {
      "type": "object",
      "properties": {
        "Crls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbCrl"
          }
        }
      },
      "title": "CrlsResponse returns published CRLs"
    },
    "pbEncodingFormat": {
      "type": "string",
      "enum": [
        "PEM",
        "DER",
        "PKCS7"
      ],
      "default": "PEM",
      "title": "- PEM: default, PEM encoded"
    },
    "pbIssuerInfo": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "format": "uint64",
          "title": "Id of the issuer. This field is used only with delegated issuers"
        },
        "Label": {
          "type": "string",
          "title": "Label specifies the Issuer's label"
        },
        "Certificate": {
          "type": "string",
          "title": "Certificate provides the certificate in PEM format"
        },
        "Intermediates": {
          "type": "string",
          "title": "Intermediates provides the intermediate CA certificates bundle in PEM format"
        },
        "Root": {
          "type": "string",
          "title": "Root provides the Root CA certificate in PEM format"
        },
        "Profiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Profiles specifies the list of profiles the issuer supports"
        },
        "Type": {
          "type": "string",
          "title": "Type of the issuer"
        },
        "Status": {
          "$ref": "#/definitions/pbIssuerStatus",
          "title": "Status of the issuer"
        }
      },
      "title": "IssuerInfo provides Issuer information"
    },
    "pbIssuerSerial": {
      "type": "object",
      "properties": {
        "IKID": {
          "type": "string",
          "title": "IKID provides Issuer Key Identifier"
        },
        "SerialNumber": {
          "type": "string",
          "title": "SerialNumber provides certificate's serial number"
        }
      }
    },
    "pbIssuerStatus": {
      "type": "string",
      "enum": [
        "ARCHIVED",
        "ACTIVE"
      ],
      "default": "ARCHIVED"
    },
    "pbIssuersInfoResponse": {
      "type": "object",
      "properties": {
        "Issuers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbIssuerInfo"
          }
        }
      },
      "title": "IssuersInfoResponse provides response for Issuers Info request"
    },
    "pbOCSPResponse": {
      "type": "object",
      "properties": {
        "Der": {
          "type": "string",
          "format": "byte",
          "title": "Der provides DER encoded response"
        }
      },
      "title": "OCSPResponse returns OCSP"
    },
    "pbReason": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "KEY_COMPROMISE",
        "CA_COMPROMISE",
        "AFFILIATION_CHANGED",
        "SUPERSEDED",
        "CESSATION_OF_OPERATION",
        "CERTIFICATE_HOLD",
        "REMOVE_FROM_CRL",
        "PRIVILEGE_WITHDRAWN",
        "AA_COMPROMISE"
      ],
      "default": "UNSPECIFIED",
      "title": "Reason specifies Certificate Revocation Reason from RFC 5280\nCRLReason ::= ENUMERATED {\n       unspecified             (0),\n       keyCompromise           (1),\n       cACompromise            (2),\n       affiliationChanged      (3),\n       superseded              (4),\n       cessationOfOperation    (5),\n       certificateHold         (6),\n            -- value 7 is not used\n       removeFromCRL           (8),\n       privilegeWithdrawn      (9),\n       aACompromise           (10) }"
    },
    "pbRevokedCertificate": {
      "type": "object",
      "properties": {
        "Certificate": {
          "$ref": "#/definitions/pbCertificate"
        },
        "RevokedAt": {
          "type": "string"
        },
        "Reason": {
          "$ref": "#/definitions/pbReason"
        }
      },
      "title": "RevokedCertificate provides X509 Cert information"
    },
    "pbRevokedCertificateResponse": {
      "type": "object",
      "properties": {
        "Revoked": {
          "$ref": "#/definitions/pbRevokedCertificate"
        }
      },
      "title": "RevokedCertificateResponse returns Revoked Certificate"
    },
    "pbRevokedCertificatesResponse": {
      "type": "object",
      "properties": {
        "RevokedCertificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbRevokedCertificate"
          }
        }
      },
      "title": "RevokedCertificatesResponse returns Revoked Certificates list"
    },
    "pbX509Extension": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "title": "Id is the extension OID"
        },
        "Critical": {
          "type": "boolean",
          "title": "Critical flag"
        },
        "Value": {
          "type": "string",
          "title": "Value is base64 encoded extension value"
        }
      },
      "description": "X509Extension represents a raw extension to be included in the certificate.  The\n\"value\" field must be hex encoded."
    },
    "pbX509Name": {
      "type": "object",
      "properties": {
        "Country": {
          "type": "string"
        },
        "State": {
          "type": "string"
        },
        "Locality": {
          "type": "string"
        },
        "Organisation": {
          "type": "string"
        },
        "OrganisationalUnit": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        }
      },
      "title": "X509Name specifies X509 Name"
    },
    "pbX509Subject": {
      "type": "object",
      "properties": {
        "CommonName": {
          "type": "string"
        },
        "Names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pbX509Name"
          }
        },
        "SerialNumber": {
          "type": "string"
        }
      },
      "title": "X509Subject specifies X509 Subject"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

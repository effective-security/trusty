// Code generated by protoc-gen-go-mock. DO NOT EDIT.
// source: cis.proto

package mockpb

import (
	"context"

	"github.com/effective-security/trusty/api/pb"
	"google.golang.org/protobuf/proto"
	"google.golang.org/protobuf/types/known/emptypb"
)

// MockCISServer for testing
type MockCISServer struct {
	pb.CISServer

	Reqs []proto.Message

	// If set, all calls return this error.
	Err error

	// responses to return if err == nil
	Resps []proto.Message
	Index int
}

// SetResponse sets a single response without errors
func (m *MockCISServer) SetResponse(r proto.Message) {
	m.Err = nil
	m.Resps = []proto.Message{r}
	m.Index = 0
}

func (m *MockCISServer) next() proto.Message {
	c := len(m.Resps)
	idx := m.Index
	m.Index++
	if idx >= c {
		idx = c - 1
	}
	return m.Resps[idx]
}

// Roots returns the root CAs
func (m *MockCISServer) GetRoots(ctx context.Context, req *emptypb.Empty) (*pb.RootsResponse, error) {
	if m.Err != nil {
		return nil, m.Err
	}
	return m.next().(*pb.RootsResponse), nil
}

// GetCertificate returns the certificate
func (m *MockCISServer) GetCertificate(ctx context.Context, req *pb.GetCertificateRequest) (*pb.CertificateResponse, error) {
	if m.Err != nil {
		return nil, m.Err
	}
	return m.next().(*pb.CertificateResponse), nil
}

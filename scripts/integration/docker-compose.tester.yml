version: "3"

networks:
  trusty_private:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.77.88.0/24

volumes:
  trusty-shared-certs:

services:
  local-kms:
    image: nsmithuk/local-kms
    domainname: trusty-kms.ekspand.com
    networks:
      trusty_private:
        ipv4_address: 10.77.88.99
        aliases:
          - trusty-kms.ekspand.com
    ports:
      - "4599" # SQL
    environment:
      - PORT=4599

  trusty-sql:
    image: ekspand/docker-centos7-postgres:latest
    domainname: trusty-sql.ekspand.com
    networks:
      trusty_private:
        ipv4_address: 10.77.88.100
        aliases:
          - trusty-sql.ekspand.com
    volumes:
      # Mounts the volumes from build container to the container in test
      # docker-compose command runs with ./scripts/integration as CWD, 
      # the source path in the volume definitions are relative to ./scripts/integration
      - ../../sql/postgres:/scripts/pgsql
    ports:
      - "5432" # SQL
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    entrypoint:
      - /bin/bash
      - -c
      - /start_postgres.sh

  # NODE 1 on softhsm
  trusty-node1:
    image: ghcr.io/ekspand/trusty:${ITEST_IMAGE_TAG}
    domainname: node1.trusty.ca
    networks:
      trusty_private:
        ipv4_address: 10.77.88.101
        aliases:
          - node1.trusty.ca
    depends_on:
      - local-kms
      - trusty-sql
    links:
      - local-kms
      - trusty-sql
    volumes:
        # Mounts the volumes from build container to the container in test
        # docker-compose command runs with ./scripts/integration as CWD, 
        # the source path in the volume definitions are relative to ./scripts/integration
      - ./tests:/opt/trusty/tests
      - ../../etc/dev:/opt/trusty/etc/dev
      - ../../scripts/sql/postgres/migrations:/opt/trusty/scripts/sql/postgres/migrations
    ports:
      - "7880" # CIS
      - "7891" # WFE
      - "7892" # CA
      - "7893"
    environment:
      - TRUSTY_GITHUB_CLIENT_ID=not_used_in_test
      - TRUSTY_GITHUB_CLIENT_SECRET=not_used_in_test
      - TRUSTY_SQL_CONN=host=10.77.88.100 port=5432 user=postgres password=postgres sslmode=disable dbname=trustydb
    entrypoint:
      - /bin/bash
      - -c
      - >-
        /opt/trusty/bin/sql/postgres/wait_sql.sh 10.77.88.100 5432 postgres postgres echo "SQL is ready" &&
        mkdir -p /tmp/trusty/softhsm/tokens /tmp/trusty/certs &&
        cp /opt/trusty/etc/dev/roots/trusty_dev_root_ca.pem /tmp/trusty/certs/trusty_dev_root_ca.pem &&
        /opt/trusty/bin/config-softhsm.sh
        --tokens-dir /tmp/trusty/softhsm/tokens
        --pin-file /tmp/trusty/softhsm/trusty_unittest.txt
        --generate-pin -s trusty_unittest
        -o /tmp/trusty/softhsm/unittest_hsm.json
        --delete --list-slots --list-object &&
        /opt/trusty/bin/gen_test_certs.sh
        --hsm-config /tmp/trusty/softhsm/unittest_hsm.json
        --ca-config /opt/trusty/etc/dev/ca-config.bootstrap.yaml
        --out-dir /tmp/trusty/certs
        --csr-dir /opt/trusty/etc/dev/csr_profile
        --root-ca /opt/trusty/etc/dev/roots/trusty_dev_root_ca.pem
        --root-ca-key /opt/trusty/etc/dev/roots/trusty_dev_root_ca-key.pem
        --prefix trusty_dev_
        --san 10.77.88.101
        --ca1 --ca2 --bundle --client --peer --force &&
        /opt/trusty/bin/trusty --std
        --hsm-cfg=/tmp/trusty/softhsm/unittest_hsm.json
        --cfg=/opt/trusty/etc/dev/trusty-config.yaml
        --sql=env://TRUSTY_SQL_CONN
        --logs-dir=/var/trusty/logs
        --audit-dir=/var/trusty/audit
        --host-name=10.77.88.101
        --cis-listen-url=http://10.77.88.101:7880
        --wfe-listen-url=https://10.77.88.101:7891
        --ca-listen-url=https://10.77.88.101:7892
        --ra-listen-url=https://10.77.88.101:7893
        --sa-listen-url=https://10.77.88.101:7894

  # NODE 2 on local-kms
  trusty-node2:
    image: ghcr.io/ekspand/trusty:${ITEST_IMAGE_TAG}
    domainname: node2.trusty.ca
    networks:
      trusty_private:
        ipv4_address: 10.77.88.102
        aliases:
          - node2.trusty.ca
    depends_on:
      - local-kms
      - trusty-sql
    links:
      - local-kms
      - trusty-sql
    volumes:
        # Mounts the volumes from build container to the container in test
        # docker-compose command runs with ./scripts/integration as CWD, 
        # the source path in the volume definitions are relative to ./scripts/integration
      - ./tests:/opt/trusty/tests
      - ../../etc/dev:/opt/trusty/etc/dev
      - ../../scripts/sql/postgres/migrations:/opt/trusty/scripts/sql/postgres/migrations
    ports:
      - "7880" # CIS
      - "7891" # WFE
      - "7892" # CA
      - "7893"
    environment:
      - AWS_ACCESS_KEY_ID=notusedbyemulator
      - AWS_SECRET_ACCESS_KEY=notusedbyemulator
      - AWS_DEFAULT_REGION=us-west-2
      - TRUSTY_GITHUB_CLIENT_ID=not_used_in_test
      - TRUSTY_GITHUB_CLIENT_SECRET=not_used_in_test
      - TRUSTY_SQL_CONN=host=10.77.88.100 port=5432 user=postgres password=postgres sslmode=disable dbname=trustydb
    entrypoint:
      - /bin/bash
      - -c
      - >-
        /opt/trusty/bin/sql/postgres/wait_sql.sh 10.77.88.100 5432 postgres postgres echo "SQL is ready" &&
        mkdir -p /tmp/trusty/certs &&
        cp /opt/trusty/etc/dev/roots/trusty_dev_root_ca.pem /tmp/trusty/certs/trusty_dev_root_ca.pem &&
        /opt/trusty/bin/gen_test_certs.sh
        --hsm-config /opt/trusty/tests/aws-test-kms.json
        --ca-config /opt/trusty/etc/dev/ca-config.bootstrap.yaml
        --out-dir /tmp/trusty/certs
        --csr-dir /opt/trusty/etc/dev/csr_profile
        --root-ca /opt/trusty/etc/dev/roots/trusty_dev_root_ca.pem
        --root-ca-key /opt/trusty/etc/dev/roots/trusty_dev_root_ca-key.pem
        --prefix trusty_dev_
        --san 10.77.88.102
        --ca1 --ca2 --bundle --client --peer --force &&
        /opt/trusty/bin/trusty --std
        --hsm-cfg=/opt/trusty/tests/aws-test-kms.json
        --cfg=/opt/trusty/etc/dev/trusty-config.yaml
        --sql=env://TRUSTY_SQL_CONN
        --logs-dir=/var/trusty/logs
        --audit-dir=/var/trusty/audit
        --host-name=10.77.88.102
        --cis-listen-url=http://10.77.88.102:7880
        --wfe-listen-url=https://10.77.88.102:7891
        --ca-listen-url=https://10.77.88.102:7892
        --ra-listen-url=https://10.77.88.102:7893
        --sa-listen-url=https://10.77.88.102:7894
  test-runner:
    image: ghcr.io/ekspand/trusty:${ITEST_IMAGE_TAG}
    domainname: tester.trusty.ca
    networks:
      trusty_private:
        ipv4_address: 10.77.88.106
        aliases:
          - tester.trusty.ca
    volumes:
      # Mounts the volumes from build container to the container in test
      # docker-compose command runs with ./scripts/integration as CWD, 
      # the source path in the volume definitions are relative to ./scripts/integration
      - ./tests:/opt/trusty/tests
      - ../../etc/dev:/opt/trusty/etc/dev
      - ../../scripts/sql/postgres/migrations:/opt/trusty/scripts/sql/postgres/migrations
    depends_on:
      - trusty-node1
      - trusty-node2
    links:
      - trusty-node1
      - trusty-node2
    environment:
      - AWS_ACCESS_KEY_ID=notusedbyemulator
      - AWS_SECRET_ACCESS_KEY=notusedbyemulator
      - AWS_DEFAULT_REGION=us-west-2
      - TRUSTY_GITHUB_CLIENT_ID=not_used_in_test
      - TRUSTY_GITHUB_CLIENT_SECRET=not_used_in_test
    entrypoint:
      - /bin/bash
      - -c
      - >-
        mkdir -p /tmp/trusty/softhsm/tokens /tmp/trusty/certs &&
        cp /opt/trusty/etc/dev/roots/trusty_dev_root_ca.pem /tmp/trusty/certs/trusty_dev_root_ca.pem &&
        /opt/trusty/bin/sql/postgres/create_sql.sh 10.77.88.100 5432 postgres postgres
        /opt/trusty/bin/config-softhsm.sh
        --tokens-dir /tmp/trusty/softhsm/tokens
        --pin-file /tmp/trusty/softhsm/trusty_unittest.txt
        --generate-pin -s trusty_unittest
        -o /tmp/trusty/softhsm/unittest_hsm.json
        --delete --list-slots --list-object &&
        /opt/trusty/bin/gen_test_certs.sh
        --hsm-config inmem
        --ca-config /opt/trusty/etc/dev/ca-config.bootstrap.yaml
        --out-dir /tmp/trusty/certs
        --csr-dir /opt/trusty/etc/dev/csr_profile
        --root-ca /opt/trusty/etc/dev/roots/trusty_dev_root_ca.pem
        --root-ca-key /opt/trusty/etc/dev/roots/trusty_dev_root_ca-key.pem
        --prefix trusty_dev_
        --root --ca1 --ca2 --bundle --client --peer &&
        /opt/trusty/tests/if-trusty-ready.sh /opt/trusty/tests/run.sh

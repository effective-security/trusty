version: "3"

networks:
  trusty_private:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 168.138.72.0/24

#volumes:
#  trusty-shared-certs:

services:
  local-kms:
    image: nsmithuk/local-kms
    domainname: trusty-kms.effectivesecurity.pt
    networks:
      trusty_private:
        ipv4_address: 168.138.72.99
        aliases:
          - trusty-kms.effectivesecurity.pt
    ports:
      - "14599:14599" # KMS
    environment:
      - PORT=14599

  trusty-sql:
    image: effectivesecurity/postgres15:sha-d151f03
    domainname: trusty-sql.effectivesecurity.pt
    networks:
      trusty_private:
        ipv4_address: 168.138.72.100
        aliases:
          - trusty-sql.effectivesecurity.pt
    volumes:
      # Mounts the volumes from build container to the container in test
      # docker-compose command runs with ./sql as CWD, 
      # the source path in the volume definitions are relative to ./sql
      - ../../sql:/trusty_sql
    ports:
      - "25433:25433" # SQL
    environment:
      - POSTGRES_PORT=25433
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - TRUSTY_JWT_SEED=testseed
    entrypoint:
      - /bin/bash
      - -c
      - /start_postgres.sh

  # NODE 1 on softhsm
  trusty-node1:
    image: effectivesecurity/trusty:${ITEST_IMAGE_TAG}
    domainname: node1.trusty.ca
    networks:
      trusty_private:
        ipv4_address: 168.138.72.101
        aliases:
          - node1.trusty.ca
    depends_on:
      - local-kms
      - trusty-sql
    links:
      - local-kms
      - trusty-sql
    volumes:
      # Mounts the volumes from build container to the container in test
      # docker-compose command runs with ./scripts/integration as CWD, 
      # the source path in the volume definitions are relative to ./scripts/integration
      - ./tests:/opt/trusty/tests
      - ../../etc/dev:/opt/trusty/etc/dev
    ports:
      - "7880" # CIS
      - "7891" # WFE
      - "7892" # CA
    environment:
      - TRUSTY_JWT_SEED=testseed
      - TRUSTY_CA_SQL_CONN=postgres://postgres:postgres@168.138.72.100:25433?sslmode=disable&dbname=cadb
    entrypoint:
      - /bin/bash
      - -c
      - |
        /opt/trusty/sql/cadb/wait_sql.sh 168.138.72.100 25433 postgres postgres echo "CA DB is ready" && \
        mkdir -p /tmp/trusty/softhsm/tokens /tmp/trusty/certs && \
        cp /opt/trusty/etc/dev/roots/trusty_root_ca.pem /tmp/trusty/certs/trusty_root_ca.pem && \
        /opt/trusty/bin/config-softhsm.sh \
          --tokens-dir /tmp/trusty/softhsm/tokens \
          --pin-file /tmp/trusty/softhsm/trusty_unittest.txt \
          --generate-pin \
          -s trusty_unittest \
          -o /tmp/trusty/softhsm/unittest_hsm.json \
          --delete --list-slots --list-object && \
        /opt/trusty/bin/gen_certs.sh \
          --hsm-config /tmp/trusty/softhsm/unittest_hsm.json \
          --ca-config /opt/trusty/etc/dev/ca-config.bootstrap.yaml \
          --out-dir /tmp/trusty/certs \
          --csr-dir /opt/trusty/etc/dev/csr_profile \
          --root-ca /opt/trusty/etc/dev/roots/trusty_root_ca.pem \
          --root-ca-key /opt/trusty/etc/dev/roots/trusty_root_ca.key \
          --csr-prefix trusty_ \
          --out-prefix trusty_ \
          --san 168.138.72.101 \
          --ca1 --ca2 --bundle --client --peer --force && \
        /opt/trusty/bin/gen_shaken_certs.sh \
          --hsm-config /tmp/trusty/softhsm/unittest_hsm.json \
          --ca-config /opt/trusty/etc/dev/ca-config.bootstrap.yaml \
          --out-dir /tmp/trusty/certs \
          --csr-dir /opt/trusty/etc/dev/csr_profile \
          --csr-prefix shaken_ \
          --out-prefix shaken_ \
          --root-ca /tmp/trusty/certs/shaken_root_ca.pem \
          --root-ca-key /tmp/trusty/certs/shaken_root_ca.key \
          --root --ca --l1_ca --bundle --force && \
        /opt/trusty/bin/trusty --log-std \
          --hsm-cfg=/tmp/trusty/softhsm/unittest_hsm.json \
          --crypto-prov=/opt/trusty/tests/aws-test-kms.json \
          --cfg=/opt/trusty/etc/dev/trusty-config.yaml \
          --ca-sql=env://TRUSTY_CA_SQL_CONN \
          --host-name=168.138.72.101 \
          --cis-listen-url=http://168.138.72.101:7880 \
          --ca-listen-url=https://168.138.72.101:7892

  # NODE 2 on local-kms
  trusty-node2:
    image: effectivesecurity/trusty:${ITEST_IMAGE_TAG}
    domainname: node2.trusty.ca
    networks:
      trusty_private:
        ipv4_address: 168.138.72.102
        aliases:
          - node2.trusty.ca
    depends_on:
      - local-kms
      - trusty-sql
    links:
      - local-kms
      - trusty-sql
    volumes:
      # Mounts the volumes from build container to the container in test
      # docker-compose command runs with ./scripts/integration as CWD, 
      # the source path in the volume definitions are relative to ./scripts/integration
      - ./tests:/opt/trusty/tests
      - ../../etc/dev:/opt/trusty/etc/dev
    ports:
      - "7880" # CIS
      - "7891" # WFE
      - "7892" # CA
    environment:
      - AWS_ACCESS_KEY_ID=notusedbyemulator
      - AWS_SECRET_ACCESS_KEY=notusedbyemulator
      - AWS_DEFAULT_REGION=us-west-2
      - TRUSTY_JWT_SEED=testseed
      - TRUSTY_CA_SQL_CONN=postgres://postgres:postgres@168.138.72.100:25433?sslmode=disable&dbname=cadb
    entrypoint:
      - /bin/bash
      - -c
      - |
        /opt/trusty/sql/cadb/wait_sql.sh 168.138.72.100 25433 postgres postgres echo "CA DB is ready" && \
        mkdir -p /tmp/trusty/certs && cp /opt/trusty/etc/dev/roots/trusty_root_ca.pem /tmp/trusty/certs/trusty_root_ca.pem && \
        /opt/trusty/bin/gen_certs.sh \
          --hsm-config /opt/trusty/tests/aws-test-kms.json \
          --ca-config /opt/trusty/etc/dev/ca-config.bootstrap.yaml \
          --out-dir /tmp/trusty/certs \
          --csr-dir /opt/trusty/etc/dev/csr_profile \
          --root-ca /opt/trusty/etc/dev/roots/trusty_root_ca.pem \
          --root-ca-key /opt/trusty/etc/dev/roots/trusty_root_ca.key \
          --csr-prefix trusty_ \
          --out-prefix trusty_ \
          --san 168.138.72.102 \
          --ca1 --ca2 --bundle --client --peer --force && \
        /opt/trusty/bin/gen_shaken_certs.sh \
          --hsm-config /opt/trusty/tests/aws-test-kms.json \
          --ca-config /opt/trusty/etc/dev/ca-config.bootstrap.yaml \
          --out-dir /tmp/trusty/certs \
          --csr-dir /opt/trusty/etc/dev/csr_profile \
          --csr-prefix shaken_ \
          --out-prefix shaken_ \
          --root-ca /tmp/trusty/certs/shaken_root_ca.pem \
          --root-ca-key /tmp/trusty/certs/shaken_root_ca.key \
          --root --ca --l1_ca --bundle --force && \
        /opt/trusty/bin/trusty --log-std \
          --hsm-cfg=/opt/trusty/tests/aws-test-kms.json \
          --cfg=/opt/trusty/etc/dev/trusty-config.yaml \
          --ca-sql=env://TRUSTY_CA_SQL_CONN \
          --host-name=168.138.72.102 \
          --cis-listen-url=http://168.138.72.102:7880 \
          --ca-listen-url=https://168.138.72.102:7892
  test-runner:
    image: effectivesecurity/trusty:${ITEST_IMAGE_TAG}
    domainname: tester.trusty.ca
    networks:
      trusty_private:
        ipv4_address: 168.138.72.106
        aliases:
          - tester.trusty.ca
    volumes:
      # Mounts the volumes from build container to the container in test
      # docker-compose command runs with ./scripts/integration as CWD, 
      # the source path in the volume definitions are relative to ./scripts/integration
      - ./tests:/opt/trusty/tests
      - ../../etc/dev:/opt/trusty/etc/dev
    depends_on:
      - trusty-node1
      - trusty-node2
    links:
      - trusty-node1
      - trusty-node2
    environment:
      - AWS_ACCESS_KEY_ID=notusedbyemulator
      - AWS_SECRET_ACCESS_KEY=notusedbyemulator
      - AWS_DEFAULT_REGION=us-west-2
      - TRUSTY_JWT_SEED=testseed
    entrypoint:
      - /bin/bash
      - -c
      - |
        mkdir -p /tmp/trusty/softhsm/tokens /tmp/trusty/certs && \
        cp /opt/trusty/etc/dev/roots/trusty_root_ca.pem /tmp/trusty/certs/trusty_root_ca.pem && \
        /opt/trusty/sql/cadb/create_sql.sh 168.138.72.100 25433 postgres postgres echo "CA DB is ready" && \
        /opt/trusty/bin/config-softhsm.sh \
          --tokens-dir /tmp/trusty/softhsm/tokens \
          --pin-file /tmp/trusty/softhsm/trusty_unittest.txt \
          --generate-pin \
          -s trusty_unittest \
          -o /tmp/trusty/softhsm/unittest_hsm.json \
          --delete --list-slots --list-object && \
        /opt/trusty/bin/gen_certs.sh \
          --hsm-config inmem \
          --ca-config /opt/trusty/etc/dev/ca-config.bootstrap.yaml \
          --out-dir /tmp/trusty/certs \
          --csr-dir /opt/trusty/etc/dev/csr_profile \
          --root-ca /opt/trusty/etc/dev/roots/trusty_root_ca.pem \
          --root-ca-key /opt/trusty/etc/dev/roots/trusty_root_ca.key \
          --csr-prefix trusty_ \
          --out-prefix trusty_ \
          --root --ca1 --ca2 --bundle --client --peer && \
        /opt/trusty/tests/if-trusty-ready.sh /opt/trusty/tests/run.sh
